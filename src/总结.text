代理模式 VS 适配器模式

	代理：提供一模一样的接口

	适配器：提供不同的接口 （不同版本的插头）

代理 VS 装饰器
	装饰器： 扩展功能 原有功能不变且可以直接使用

	代理： 显示原有功能 但是经过限制或者阉割之后的


综合示例
 使用jQuery 做一个模拟购物车的示例 包括： 显示列表 添加 删除
 用到的设计模式 工厂模式 单例模式 装饰器模式 观察者模式 状态模式 模板方法模式 代理模式
 准备工作：  webpack.dev.config.js 加代理  >> demo>api>json


总结案例： 
	工厂模式：$('') ， 创建商品
	单例模式： 购物车
	装饰器模式： 打点统计
	观察者模式： 网页事件 , Promise
	状态模式： 添加到购车，删除购物车
	模板方法模式： 渲染有统一的方法，内部包含了各模块渲染 。。。。。。init()
	代理模式： 打折商品处理


课程总结： 
	基础知识 ： （面向对象 ， 设计原则） 
		UML类图
		5大设计原则 s(单一设计原则) o(开放封闭原则)

	设计模式1 ： 常用
		工厂 单例 适配器 代理 外观 观察者 状态 迭代器

	设计模式2 ： 不常用
		原型 桥接 组合 享元
		策略 模板方法 职责链 命令
		备忘录 中介者 访问者 解释器
	综合示例演示
		面向对象思想 UML类图设计
		







